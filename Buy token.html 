<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Acquista Token</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            text-align: center;
            background-color: #111;
            color: white;
        }
        header {
            background: linear-gradient(90deg, #004d00, #008000);
            color: white;
            padding: 20px;
            font-size: 24px;
            font-weight: bold;
        }
        section {
            padding: 50px;
            background: #222;
            margin: 20px auto;
            width: 80%;
            border-radius: 15px;
            box-shadow: 0px 4px 10px rgba(0, 255, 0, 0.3);
        }
        button {
            padding: 15px 30px;
            font-size: 18px;
            background: #00cc00;
            color: white;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            transition: background 0.3s ease-in-out;
            margin: 10px;
        }
        button:hover {
            background: #009900;
        }
        input {
            padding: 10px;
            font-size: 16px;
            margin-top: 10px;
            width: 80%;
        }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/web3@latest/dist/web3.min.js"></script>
</head>
<body>
    <header>
        <h1>Acquista i Nostri Token</h1>
        <p>Collega il tuo wallet per iniziare</p>
    </header>
    <section>
        <h2>Collega il tuo Wallet</h2>
        <button onclick="connectWallet()">Connetti con MetaMask</button>
        <button onclick="connectPayton()">Connetti con Payton</button>
        <button onclick="connectWalletConnect()">Connetti con WalletConnect</button>
    </section>
    <section>
        <h2>Compra Token</h2>
        <p>Inserisci l'importo in USDT per acquistare i token</p>
        <input type="number" id="amount" placeholder="Inserisci importo">
        <button onclick="buyTokens()">Acquista Token</button>
    </section>
    <section>
        <h2>Supporta il Progetto</h2>
        <p>Puoi anche inviare fondi direttamente al nostro wallet:</p>
        <p><strong>Indirizzo Wallet:</strong> 0x123456789abcdef...</p>
        <button onclick="copyWalletAddress()">Copia Indirizzo</button>
    </section>
    <script>
        let userAccount;
        const contractAddress = "0xYourSmartContractAddress";
        const contractABI = [
            {
                "constant": false,
                "inputs": [{ "name": "_amount", "type": "uint256" }],
                "name": "buyTokens",
                "outputs": [],
                "payable": true,
                "stateMutability": "payable",
                "type": "function"
            }
        ];
        
        async function connectWallet() {
            if (window.ethereum) {
                try {
                    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });
                    userAccount = accounts[0];
                    alert('Wallet MetaMask connesso!');
                } catch (error) {
                    alert('Connessione fallita!');
                }
            } else {
                alert('MetaMask non trovato! Installa MetaMask per procedere.');
            }
        }
        
        async function connectPayton() {
            alert('Funzione di connessione a Payton in sviluppo!');
        }
        
        async function connectWalletConnect() {
            alert('Funzione di connessione con WalletConnect in sviluppo!');
        }
        
        async function buyTokens() {
            if (!userAccount) {
                alert('Collega prima il tuo wallet!');
                return;
            }
            let amount = document.getElementById('amount').value;
            if (amount <= 0) {
                alert('Inserisci un importo valido!');
                return;
            }
            const web3 = new Web3(window.ethereum);
            const contract = new web3.eth.Contract(contractABI, contractAddress);
            try {
                await contract.methods.buyTokens(web3.utils.toWei(amount, 'ether')).send({
                    from: userAccount,
                    value: web3.utils.toWei(amount, 'ether')
                });
                alert(`Hai acquistato ${amount} token!`);
            } catch (error) {
                alert('Transazione fallita!');
            }
        }

        function copyWalletAddress() {
            const walletAddress = "0x123456789abcdef...";
            navigator.clipboard.writeText(walletAddress).then(() => {
                alert("Indirizzo wallet copiato!");
            }, () => {
                alert("Errore nella copia dell'indirizzo wallet.");
            });
        }
    </script>
</body>
</html>
